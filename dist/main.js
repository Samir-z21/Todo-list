(()=>{"use strict";var e={341:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),c=t.n(a)()(r());c.push([e.id,"/* :root {\n    --\n}\n*/ \n\n* {\n    padding: 0;\n    margin: 0;\n    \n}\nbody {\n    background-color: grey;\n    padding: 0;\n    margin: 0;\n    display: grid;\n    grid-template: 20vh 70vh 10vh / 10vw 90vw;\n}\n\n/*Header*/\n#header {\n    grid-column: 2/3;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: 1px solid red;\n    padding-top: 50px;\n}\n\n#buttons {\n    align-self: flex-end;\n    padding-right: 30px;\n}\n\nbutton {\n    width: 200px;\n    height: 50px;\n    cursor: pointer;\n}\n\n/*Sidebar*/ \n#sidebar {\n    border: 1px solid blue;\n    grid-row: 1/3;\n}\n\n/*Tasks container */\n#tasks-container {\n    border: 1px solid green;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n    margin: 30px;\n}\n\n/*task card*/\n.taskCard{\n    display: flex;\n    flex-direction: column;\n    background-color: blue;\n    padding: 20px;\n}\n\n\n.bottomCard {\n    display: flex;\n}\n\n.centerInfo {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.taskCheckbox {\n    width: 20px;\n    height: 20px;\n    background-color: #eee;\n    border: 1px solid #ccc;\n    cursor: pointer;\n}\n\n.taskRemoveBtn {\n    cursor: pointer;\n    border: 1px solid darkred;\n}\n\n/*Footer*/\n#footer {\n    grid-column: 1/3;\n    border: 1px solid purple;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}","",{version:3,sources:["webpack://./dist/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;IACI,UAAU;IACV,SAAS;;AAEb;AACA;IACI,sBAAsB;IACtB,UAAU;IACV,SAAS;IACT,aAAa;IACb,yCAAyC;AAC7C;;AAEA,SAAS;AACT;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,qBAAqB;IACrB,iBAAiB;AACrB;;AAEA;IACI,oBAAoB;IACpB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA,UAAU;AACV;IACI,sBAAsB;IACtB,aAAa;AACjB;;AAEA,mBAAmB;AACnB;IACI,uBAAuB;IACvB,aAAa;IACb,eAAe;IACf,SAAS;IACT,YAAY;AAChB;;AAEA,YAAY;AACZ;IACI,aAAa;IACb,sBAAsB;IACtB,sBAAsB;IACtB,aAAa;AACjB;;;AAGA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,yBAAyB;AAC7B;;AAEA,SAAS;AACT;IACI,gBAAgB;IAChB,wBAAwB;IACxB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB",sourcesContent:["/* :root {\n    --\n}\n*/ \n\n* {\n    padding: 0;\n    margin: 0;\n    \n}\nbody {\n    background-color: grey;\n    padding: 0;\n    margin: 0;\n    display: grid;\n    grid-template: 20vh 70vh 10vh / 10vw 90vw;\n}\n\n/*Header*/\n#header {\n    grid-column: 2/3;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: 1px solid red;\n    padding-top: 50px;\n}\n\n#buttons {\n    align-self: flex-end;\n    padding-right: 30px;\n}\n\nbutton {\n    width: 200px;\n    height: 50px;\n    cursor: pointer;\n}\n\n/*Sidebar*/ \n#sidebar {\n    border: 1px solid blue;\n    grid-row: 1/3;\n}\n\n/*Tasks container */\n#tasks-container {\n    border: 1px solid green;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n    margin: 30px;\n}\n\n/*task card*/\n.taskCard{\n    display: flex;\n    flex-direction: column;\n    background-color: blue;\n    padding: 20px;\n}\n\n\n.bottomCard {\n    display: flex;\n}\n\n.centerInfo {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.taskCheckbox {\n    width: 20px;\n    height: 20px;\n    background-color: #eee;\n    border: 1px solid #ccc;\n    cursor: pointer;\n}\n\n.taskRemoveBtn {\n    cursor: pointer;\n    border: 1px solid darkred;\n}\n\n/*Footer*/\n#footer {\n    grid-column: 1/3;\n    border: 1px solid purple;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}"],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],d=o.base?s[0]+o.base:s[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var p=t(u),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var m=r(A,o);o.byIndex=i,n.splice(i,0,{identifier:u,updater:m,references:1})}c.push(u)}return c}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=t(a[c]);n[i].references--}for(var s=o(e,r),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),a=t(569),c=t.n(a),i=t(565),s=t.n(i),d=t(216),l=t.n(d),u=t(589),p=t.n(u),A=t(341),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),n()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;const f=[],h=[];class C{constructor(e,n,t,o){this.title=e,this.description=n,this.dueDate=t,this.projectTitle=o}}class g extends C{constructor(e,n,t,o){super(e,n,t),this.color=o}}const v=document.getElementById("projectList"),y=document.getElementById("projectColor");let B=1;function I(e){const n=f.find((n=>n.title===e));return n?n.color:void 0}function x(e){const n=Array.from(y.getElementsByTagName("option")).find((n=>n.value===e));if(!y.contains(n))return console.log("hey"),!0;v.childElementCount===B&&(B++,y.removeChild(n))}const b=document.getElementById("tasks-container"),k=document.getElementById("filter");function E(e){e.forEach((e=>{b.appendChild(e)}))}const j=function(){switch(b.querySelectorAll(".taskCard").forEach((e=>{b.removeChild(e)})),k.value){case"oldest":E(L);break;case"newest":E(L.slice().reverse());break;case"dueDate":function e(e,n){return new Date(e.querySelector(".taskDueDate").textContent)-new Date(n.querySelector(".taskDueDate").textContent)}E(L.slice().sort(e));break;case"project":function n(e,n){const t=e.querySelector(".projectName").textContent,o=n.querySelector(".projectName").textContent;return t.localeCompare(o)}E(L.slice().sort(n))}S()},w=document.getElementById("tasks-container"),T=document.getElementById("checkboxArchive"),D=[];function S(){T.checked?D.forEach((e=>{w.appendChild(e)})):D.forEach((e=>{w.appendChild(e),w.removeChild(e)}))}const L=[];const O=document.getElementById("sidebar");function M(e,n){const t=document.createElement("div");return t.classList.add(e),t.textContent=n,"taskRemoveBtn"===e&&t.addEventListener("click",(e=>{!function(e){const n=t(L)||t(D);function t(n){return n.find((n=>n.querySelector(".taskRemoveBtn")===e.target))}const o=L.indexOf(n),r=D.indexOf(n);console.log(n,o,r),-1!==o&&L.splice(o,1),-1!==r&&D.splice(r,1),j()}(e)})),t}function q(e){const n={};return n[e]=document.createElement("div"),n[e].classList.add(e),n[e]}const N=document.getElementById("taskDialog"),R=document.getElementById("projectDialog"),U=document.getElementById("taskTitle"),Y=document.getElementById("projectTitle"),P=document.getElementById("taskBtn"),V=document.getElementById("taskDialog");P.addEventListener("click",(()=>{V.showModal(),U.focus()}));const Z=document.getElementById("projectBtn"),F=document.getElementById("projectDialog");Z.addEventListener("click",(()=>{F.showModal(),Y.focus()})),document.getElementById("taskConfirm").addEventListener("click",(e=>{e.preventDefault(),function(){const e=document.getElementById("taskTitle"),n=document.getElementById("taskDescription"),t=document.getElementById("taskDueDate"),o=document.getElementById("projectList"),r=o.options[o.selectedIndex];if(e.focus(),!e.checkValidity()||!n.checkValidity()||!t.checkValidity()||/^\s*$/.test(e.value)||/^\s*$/.test(n.value))return void alert("Please fill the inputs. The title can't exceed 10 charachters. The description can't exceed 30 charachters");let a=e.value,c=n.value,i=t.value,s=r.value;N.close(),function(e,n,t,o){let r=function(e,n,t,o){const r=new C(e,n,t,o);return h.push(r),{newTaskObj:r,taskArray:h}}(e,n,t,o);const a=q("taskCard");a.style.backgroundColor=I(o);const c=q("topDetailsCard");c.appendChild(M("projectName",r.newTaskObj.projectTitle)),a.appendChild(c);const i=q("bottomCard"),s=q("centerInfo");s.appendChild(M("taskTitle",r.newTaskObj.title)),s.appendChild(M("taskDueDate",r.newTaskObj.dueDate));const d=q("rightSide"),l=document.createElement("input");l.type="checkbox",l.classList.add("taskCheckbox"),d.appendChild(l),d.appendChild(M("taskRemoveBtn","🗑️")),i.append(s),i.append(d),a.appendChild(i),L.push(a),l.addEventListener("click",(e=>{!function(e){const n=t(L)||t(D);function t(n){return n.find((n=>n.querySelector(".taskCheckbox")===e.target))}const o=D.indexOf(n),r=L.indexOf(n);console.log(n);const a=n.getElementsByClassName("projectName")[0].textContent;e.target.checked?(D.includes(n)||D.push(n),-1!==r&&L.splice(r,1),n.style.backgroundColor="rgb(153, 105, 105)"):(L.includes(n)||L.push(n),-1!==o&&D.splice(o,1),n.style.backgroundColor=I(a),I(a)||(n.style.backgroundColor="blue")),j(),S()}(e)})),j()}(a,c,i,s),e.value="",n.value="",t.value=""}()})),document.getElementById("projectConfirm").addEventListener("click",(e=>{e.preventDefault(),function(){const e=document.getElementById("projectTitle"),n=document.getElementById("projectDescription"),t=document.getElementById("projectDueDate"),o=document.getElementById("projectColor");if(!e.checkValidity()||!n.checkValidity()||!t.checkValidity()||/^\s*$/.test(e.value)||/^\s*$/.test(n.value))return void alert("Please fill the inputs. The title can't exceed 10 charachters. The description can't exceed 30 charachters");let r=e.value,a=n.value,c=t.value,i=o.value;f.find((e=>e.title===r))?alert("can't use same project name"):x(i)?alert("Max amount of projects reached"):(R.close(),function(e,n,t,o){let r=function(e,n,t,o){const r=new g(e,n,t,o);return f.push(r),{newProjectObj:r,projectArray:f}}(e,n,t,o);const a=q("projectItem");a.style.backgroundColor=o,a.appendChild(M("projectTitle",r.newProjectObj.title)),a.appendChild(M("projectDueDate",r.newProjectObj.dueDate)),function(e){const n=document.createElement("option");n.value=e,n.text=e,v.appendChild(n)}(e),O.appendChild(a)}(r,a,c,i),e.value="",n.value="",t.value="")}()})),document.querySelectorAll(".close-btn").forEach((e=>{e.addEventListener("click",(e=>{e.preventDefault(),V.close(),F.close()}))})),document.getElementById("filter").addEventListener("change",(()=>{j()})),document.getElementById("checkboxArchive").addEventListener("click",(()=>{S()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LGdCQUFlN0csZUFDM0IsQ0lrQ3dCOEcsQ0FBVzFHLEVBQU9DLEVBQWFDLEVBQVNHLEdBRTVELE1BQU1zRyxFQUFjM0MsRUFBZSxlQUUvQjJDLEVBQVlwSyxNQUFNaUosZ0JBQWtCbkYsRUFJcENzRyxFQUFZeEosWUFBWThGLEVBQWMsZUFBZ0J1RCxFQUFjQyxjQUFjekcsUUFFbEYyRyxFQUFZeEosWUFBWThGLEVBQWMsaUJBQWtCdUQsRUFBY0MsY0FBY3ZHLFVIdEU1RixTQUEwQkYsR0FDdEIsTUFBTTRHLEVBQWdCbEssU0FBU1csY0FBYyxVQUU3Q3VKLEVBQWN4RixNQUFRcEIsRUFDdEI0RyxFQUFjekQsS0FBT25ELEVBQ3JCTyxFQUFZcEQsWUFBWXlKLEVBRTVCLENHaUVRQyxDQUFnQjdHLEdBR3BCZ0QsRUFBa0I3RixZQUFZd0osRUFDbEMsQ0NQSUcsQ0FBWTlHLEVBQU9DLEVBQWFDLEVBQVNHLEdBRXpDRixFQUFhaUIsTUFBUSxHQUNyQmtGLEVBQW1CbEYsTUFBUSxHQUMzQm1GLEVBQWVuRixNQUFRLEdBQzNCLENDdkNJMkYsRUFBYyxJQUtEckssU0FBU3FGLGlCQUFpQixjQUNsQ0YsU0FBU21GLElBQ2RBLEVBQUkxRCxpQkFBaUIsU0FBU0MsSUFDOUJBLEVBQU1tQixpQkFDTixFQUFXUSxRQUNYLEVBQWNBLE9BQU8sR0FDbkIsSUFLU3hJLFNBQVM4RCxlQUFlLFVBQ2hDOEMsaUJBQWlCLFVBQVUsS0FDOUIsR0FBWSxJQUdRNUcsU0FBUzhELGVBQWUsbUJBQ2hDOEMsaUJBQWlCLFNBQVMsS0FDdENWLEdBQVMsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL2Rpc3Qvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9kaXN0L3N0eWxlLmNzcz9iNWM2Iiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9vYmplY3RDb250cnVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9saW5rLVByb2plY3RUYXNrLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9maWx0ZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2RsdC1hcmNodi5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbG9hZENvbmVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3RvcmVNb2RhbHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAvKiA6cm9vdCB7XG4gICAgLS1cbn1cbiovIFxuXG4qIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBcbn1cbmJvZHkge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlOiAyMHZoIDcwdmggMTB2aCAvIDEwdncgOTB2dztcbn1cblxuLypIZWFkZXIqL1xuI2hlYWRlciB7XG4gICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gICAgcGFkZGluZy10b3A6IDUwcHg7XG59XG5cbiNidXR0b25zIHtcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xufVxuXG5idXR0b24ge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4vKlNpZGViYXIqLyBcbiNzaWRlYmFyIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibHVlO1xuICAgIGdyaWQtcm93OiAxLzM7XG59XG5cbi8qVGFza3MgY29udGFpbmVyICovXG4jdGFza3MtY29udGFpbmVyIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmVlbjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBnYXA6IDIwcHg7XG4gICAgbWFyZ2luOiAzMHB4O1xufVxuXG4vKnRhc2sgY2FyZCovXG4udGFza0NhcmR7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG4gICAgcGFkZGluZzogMjBweDtcbn1cblxuXG4uYm90dG9tQ2FyZCB7XG4gICAgZGlzcGxheTogZmxleDtcbn1cblxuLmNlbnRlckluZm8ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4udGFza0NoZWNrYm94IHtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnRhc2tSZW1vdmVCdG4ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBkYXJrcmVkO1xufVxuXG4vKkZvb3RlciovXG4jZm9vdGVyIHtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHB1cnBsZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9kaXN0L3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7O0NBR0M7O0FBRUQ7SUFDSSxVQUFVO0lBQ1YsU0FBUzs7QUFFYjtBQUNBO0lBQ0ksc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsYUFBYTtJQUNiLHlDQUF5QztBQUM3Qzs7QUFFQSxTQUFTO0FBQ1Q7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLG9CQUFvQjtJQUNwQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLGVBQWU7QUFDbkI7O0FBRUEsVUFBVTtBQUNWO0lBQ0ksc0JBQXNCO0lBQ3RCLGFBQWE7QUFDakI7O0FBRUEsbUJBQW1CO0FBQ25CO0lBQ0ksdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYixlQUFlO0lBQ2YsU0FBUztJQUNULFlBQVk7QUFDaEI7O0FBRUEsWUFBWTtBQUNaO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsYUFBYTtBQUNqQjs7O0FBR0E7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7SUFDZix5QkFBeUI7QUFDN0I7O0FBRUEsU0FBUztBQUNUO0lBQ0ksZ0JBQWdCO0lBQ2hCLHdCQUF3QjtJQUN4QixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiA6cm9vdCB7XFxuICAgIC0tXFxufVxcbiovIFxcblxcbioge1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIFxcbn1cXG5ib2R5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlOiAyMHZoIDcwdmggMTB2aCAvIDEwdncgOTB2dztcXG59XFxuXFxuLypIZWFkZXIqL1xcbiNoZWFkZXIge1xcbiAgICBncmlkLWNvbHVtbjogMi8zO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XFxuICAgIHBhZGRpbmctdG9wOiA1MHB4O1xcbn1cXG5cXG4jYnV0dG9ucyB7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xcbiAgICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xcbn1cXG5cXG5idXR0b24ge1xcbiAgICB3aWR0aDogMjAwcHg7XFxuICAgIGhlaWdodDogNTBweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4vKlNpZGViYXIqLyBcXG4jc2lkZWJhciB7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsdWU7XFxuICAgIGdyaWQtcm93OiAxLzM7XFxufVxcblxcbi8qVGFza3MgY29udGFpbmVyICovXFxuI3Rhc2tzLWNvbnRhaW5lciB7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZWVuO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxuICAgIGdhcDogMjBweDtcXG4gICAgbWFyZ2luOiAzMHB4O1xcbn1cXG5cXG4vKnRhc2sgY2FyZCovXFxuLnRhc2tDYXJke1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbn1cXG5cXG5cXG4uYm90dG9tQ2FyZCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5jZW50ZXJJbmZvIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLnRhc2tDaGVja2JveCB7XFxuICAgIHdpZHRoOiAyMHB4O1xcbiAgICBoZWlnaHQ6IDIwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnRhc2tSZW1vdmVCdG4ge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtyZWQ7XFxufVxcblxcbi8qRm9vdGVyKi9cXG4jZm9vdGVyIHtcXG4gICAgZ3JpZC1jb2x1bW46IDEvMztcXG4gICAgYm9yZGVyOiAxcHggc29saWQgcHVycGxlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIi8vaW1wb3J0IGxvYWRUYXNrIGZyb20gXCIuL2xvYWRDb25lbnRcIjtcbmNvbnN0IHByb2plY3RBcnJheSA9IFtdO1xuY29uc3QgdGFza0FycmF5ID0gW11cblxuY2xhc3MgVGFzayB7XG4gICAgY29uc3RydWN0b3IgKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJvamVjdFRpdGxlKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZSxcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xuICAgICAgICB0aGlzLnByb2plY3RUaXRsZSA9IHByb2plY3RUaXRsZTtcbiAgICB9ICBcbn1cblxuY2xhc3MgUHJvamVjdCBleHRlbmRzIFRhc2sge1xuICAgIGNvbnN0cnVjdG9yICh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIGNvbG9yKSB7XG4gICAgICAgIHN1cGVyICh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUpO1xuICAgICAgICB0aGlzLmNvbG9yID0gY29sb3I7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBhZGRUYXNrICh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByb2plY3ROYW1lKSB7XG4gICAgY29uc3QgbmV3VGFza09iaiA9IG5ldyBUYXNrICh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByb2plY3ROYW1lKTtcbiAgICB0YXNrQXJyYXkucHVzaChuZXdUYXNrT2JqKTtcblxuICAgIHJldHVybiB7bmV3VGFza09iaiwgdGFza0FycmF5fVxufVxuZnVuY3Rpb24gYWRkUHJvamVjdCAodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBjb2xvcikge1xuICAgIGNvbnN0IG5ld1Byb2plY3RPYmogPSBuZXcgUHJvamVjdCAodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBjb2xvcik7XG4gICAgcHJvamVjdEFycmF5LnB1c2gobmV3UHJvamVjdE9iaik7XG4gICAgXG4gICAgcmV0dXJuIHtuZXdQcm9qZWN0T2JqLCBwcm9qZWN0QXJyYXl9XG59XG5cblxuXG5cbmV4cG9ydCB7YWRkVGFzaywgYWRkUHJvamVjdCAsIHRhc2tBcnJheSwgcHJvamVjdEFycmF5fSIsImltcG9ydCB7IHByb2plY3RBcnJheSB9IGZyb20gXCIuL29iamVjdENvbnRydWN0b3JcIjtcbmNvbnN0IHByb2plY3RMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0TGlzdFwiKTtcbmNvbnN0IHByb2plY3RDb2xvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0Q29sb3InKTtcbmxldCBlbGVtZW50Q291bnQgPSAxO1xuXG5mdW5jdGlvbiBsaW5rUHJvamVjdE5hbWUgKHRpdGxlKXtcbiAgICBjb25zdCBwcm9qZWN0T3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG5cbiAgICBwcm9qZWN0T3B0aW9uLnZhbHVlID0gdGl0bGU7XG4gICAgcHJvamVjdE9wdGlvbi50ZXh0ID0gdGl0bGU7XG4gICAgcHJvamVjdExpc3QuYXBwZW5kQ2hpbGQocHJvamVjdE9wdGlvbik7XG5cbn1cblxuZnVuY3Rpb24gY29sb3JUYXNrIChwcm9qZWN0VGl0bGUpIHtcbiAgICBjb25zdCBtYXRjaGluZ09iaiA9IHByb2plY3RBcnJheS5maW5kKG9iaiA9PiBvYmoudGl0bGUgPT09IHByb2plY3RUaXRsZSk7XG4gICAgXG4gICAgXG4gICAgaWYgKG1hdGNoaW5nT2JqKSB7XG4gICAgcmV0dXJuIG1hdGNoaW5nT2JqLmNvbG9yXG4gICAgfSBlbHNlIHJldHVyblxufVxuXG5mdW5jdGlvbiByZW1vdmVDb2xvck9wdCAoY29sb3IpIHtcbiAgICBjb25zdCBvcHRpb25zID0gQXJyYXkuZnJvbShwcm9qZWN0Q29sb3IuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ29wdGlvbicpKTtcblxuICAgIGNvbnN0IGNob3Nlbk9wdGlvbiA9IG9wdGlvbnMuZmluZChvcHRpb24gPT4gb3B0aW9uLnZhbHVlID09PSBjb2xvcilcblxuICAgIGlmICghKHByb2plY3RDb2xvci5jb250YWlucyhjaG9zZW5PcHRpb24pKSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcImhleVwiKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChwcm9qZWN0TGlzdC5jaGlsZEVsZW1lbnRDb3VudCA9PT0gZWxlbWVudENvdW50KSB7XG4gICAgICAgIGVsZW1lbnRDb3VudCsrO1xuICAgICAgICBwcm9qZWN0Q29sb3IucmVtb3ZlQ2hpbGQoY2hvc2VuT3B0aW9uKTtcbiAgICB9IGVsc2UgcmV0dXJuXG5cbn1cbmV4cG9ydCB7bGlua1Byb2plY3ROYW1lLCBjb2xvclRhc2ssIHJlbW92ZUNvbG9yT3B0fSIsImltcG9ydCB7IHRhc2tDYXJkQXJyYXlzIH0gZnJvbSBcIi4vbG9hZENvbmVudFwiO1xuaW1wb3J0IHsgYXJjaGl2ZSB9IGZyb20gXCIuL2RsdC1hcmNodlwiO1xuXG5jb25zdCB0YXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrcy1jb250YWluZXInKTtcbmNvbnN0IGZpbHRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlsdGVyXCIpO1xuXG5mdW5jdGlvbiBmaWx0ZXJUYXNrcyAoKSB7XG5cbiAgICAvLyBDbGVhciBjdXJyZW50IGNhcmRzXG4gICAgY29uc3QgY3VycmVudFRhc2tDYXJkcyA9IHRhc2tzQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy50YXNrQ2FyZCcpO1xuICAgIGN1cnJlbnRUYXNrQ2FyZHMuZm9yRWFjaChkaXYgPT4ge1xuICAgICAgICB0YXNrc0NvbnRhaW5lci5yZW1vdmVDaGlsZChkaXYpXG4gICAgfSlcbiAgICBcbiAgICBcbiAgICBcbiAgICAvL3NvcnQgYnkgZmlsdGVyXG4gICAgc3dpdGNoIChmaWx0ZXIudmFsdWUpIHtcbiAgICAgICAgY2FzZSBcIm9sZGVzdFwiOlxuICAgICAgICAgICAgYXBwZW5kQ2hpbGRzKHRhc2tDYXJkQXJyYXlzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgICBjYXNlIFwibmV3ZXN0XCI6XG4gICAgICAgICAgICBjb25zdCBuZXdlc3RBcnJheSA9IHRhc2tDYXJkQXJyYXlzLnNsaWNlKCkucmV2ZXJzZSgpO1xuICAgICAgICAgICAgYXBwZW5kQ2hpbGRzKG5ld2VzdEFycmF5KTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBcImR1ZURhdGVcIjpcbiAgICAgICAgICAgIGZ1bmN0aW9uIGNvbXBhcmVCeURhdGUoYSwgYikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGVBID0gbmV3IERhdGUoYS5xdWVyeVNlbGVjdG9yKCcudGFza0R1ZURhdGUnKS50ZXh0Q29udGVudCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0ZUIgPSBuZXcgRGF0ZShiLnF1ZXJ5U2VsZWN0b3IoJy50YXNrRHVlRGF0ZScpLnRleHRDb250ZW50KTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGVBIC0gZGF0ZUI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IGRhdGVTb3J0ZWRBcnJheSA9IHRhc2tDYXJkQXJyYXlzLnNsaWNlKCkuc29ydChjb21wYXJlQnlEYXRlKTtcbiAgICAgICAgICAgIGFwcGVuZENoaWxkcyhkYXRlU29ydGVkQXJyYXkpO1xuICAgICAgICBicmVhaztcbiAgICAgICAgICAgIFxuICAgICAgICBjYXNlIFwicHJvamVjdFwiOlxuICAgICAgICAgICAgZnVuY3Rpb24gY29tcGFyZUJ5UHJvamVjdCAoYSxiKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RyaW5nQSA9IGEucXVlcnlTZWxlY3RvcignLnByb2plY3ROYW1lJykudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RyaW5nQiA9IGIucXVlcnlTZWxlY3RvcignLnByb2plY3ROYW1lJykudGV4dENvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gc3RyaW5nQS5sb2NhbGVDb21wYXJlKHN0cmluZ0IpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0U29ydGVkQXJyYXkgPSB0YXNrQ2FyZEFycmF5cy5zbGljZSgpLnNvcnQoY29tcGFyZUJ5UHJvamVjdCk7XG4gICAgICAgICAgICBhcHBlbmRDaGlsZHMocHJvamVjdFNvcnRlZEFycmF5KTtcbiAgICAgICAgYnJlYWs7XG4gICAgfTtcbiAgICBhcmNoaXZlKCk7XG5cbn1cblxuZnVuY3Rpb24gYXBwZW5kQ2hpbGRzIChuYW1lZEFycmF5KSB7XG4gICAgbmFtZWRBcnJheS5mb3JFYWNoKGRpdiA9PiB7XG4gICAgICAgIHRhc2tzQ29udGFpbmVyLmFwcGVuZENoaWxkKGRpdilcbiAgICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBmaWx0ZXJUYXNrcyIsImltcG9ydCB7dGFza0NhcmRBcnJheXN9IGZyb20gXCIuL2xvYWRDb25lbnRcIjtcbmltcG9ydCBmaWx0ZXJUYXNrcyBmcm9tICcuL2ZpbHRlcic7XG5pbXBvcnQgeyBjb2xvclRhc2sgfSBmcm9tIFwiLi9saW5rLVByb2plY3RUYXNrXCI7XG5cblxuLy9jb25zdCBkZWxldGVUYXNrID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInRhc2tSZW1vdmVCdG5cIik7XG5cbmNvbnN0IHRhc2tzQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tzLWNvbnRhaW5lcicpO1xuY29uc3QgY2hlY2tib3hBcmNoaXZlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGVja2JveEFyY2hpdmVcIik7XG5jb25zdCBhcmNoaXZlZFRhc2tzID0gW11cblxuZnVuY3Rpb24gdGFza0RvbmUoZXZlbnQpIHtcbiAgICBjb25zdCBjbGlja2VkQ2FyZCA9IGZpbmRDYXJkSW5BcnJheSh0YXNrQ2FyZEFycmF5cykgfHwgZmluZENhcmRJbkFycmF5KGFyY2hpdmVkVGFza3MpO1xuXG4gICAgZnVuY3Rpb24gZmluZENhcmRJbkFycmF5KGFycmF5KSB7XG4gICAgICByZXR1cm4gYXJyYXkuZmluZChjYXJkID0+IGNhcmQucXVlcnlTZWxlY3RvcignLnRhc2tDaGVja2JveCcpID09PSBldmVudC50YXJnZXQpO1xuICAgIH1cbiAgXG4gICAgY29uc3QgYXJjaGl2ZWRJbmRleCA9IGFyY2hpdmVkVGFza3MuaW5kZXhPZihjbGlja2VkQ2FyZCk7XG4gICAgY29uc3QgY2xpY2tlZENhcmRJbmRleCA9IHRhc2tDYXJkQXJyYXlzLmluZGV4T2YoY2xpY2tlZENhcmQpO1xuXG4gICAgY29uc29sZS5sb2coY2xpY2tlZENhcmQpXG4gICAgY29uc3QgY2xpY2tlZENhcmRQcm9qZWN0VGl0bGVEaXYgPSBjbGlja2VkQ2FyZC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwicHJvamVjdE5hbWVcIik7XG4gICAgY29uc3QgY2xpY2tlZENhcmRQcm9qZWN0VGl0bGUgPSBjbGlja2VkQ2FyZFByb2plY3RUaXRsZURpdlswXS50ZXh0Q29udGVudDtcblxuICAgIGlmIChldmVudC50YXJnZXQuY2hlY2tlZCkge1xuICAgICAgICBpZiAoIWFyY2hpdmVkVGFza3MuaW5jbHVkZXMoY2xpY2tlZENhcmQpKSB7XG4gICAgICAgICAgYXJjaGl2ZWRUYXNrcy5wdXNoKGNsaWNrZWRDYXJkKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjbGlja2VkQ2FyZEluZGV4ICE9PSAtMSkge1xuICAgICAgICAgIHRhc2tDYXJkQXJyYXlzLnNwbGljZShjbGlja2VkQ2FyZEluZGV4LCAxKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNsaWNrZWRDYXJkLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICBcInJnYigxNTMsIDEwNSwgMTA1KVwiO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIFxuICAgICAgICBpZiAoIXRhc2tDYXJkQXJyYXlzLmluY2x1ZGVzKGNsaWNrZWRDYXJkKSkge1xuICAgICAgICAgICAgdGFza0NhcmRBcnJheXMucHVzaChjbGlja2VkQ2FyZCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoYXJjaGl2ZWRJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgIGFyY2hpdmVkVGFza3Muc3BsaWNlKGFyY2hpdmVkSW5kZXgsIDEpO1xuICAgICAgICB9XG5cbiAgICAgICAgY2xpY2tlZENhcmQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gY29sb3JUYXNrKGNsaWNrZWRDYXJkUHJvamVjdFRpdGxlKTtcbiAgICAgICAgaWYgKCFjb2xvclRhc2soY2xpY2tlZENhcmRQcm9qZWN0VGl0bGUpKSB7XG4gICAgICAgICAgICBjbGlja2VkQ2FyZC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcImJsdWVcIlxuICAgICAgICB9IFxuICAgIH07XG5cbiAgICBcbiAgICBmaWx0ZXJUYXNrcygpO1xuICAgIGFyY2hpdmUoKTtcbn1cbiAgXG5mdW5jdGlvbiBhcmNoaXZlICgpe1xuICAgIGlmIChjaGVja2JveEFyY2hpdmUuY2hlY2tlZCkge1xuICAgICAgICBhcmNoaXZlZFRhc2tzLmZvckVhY2goZGl2ID0+IHtcbiAgICAgICAgICAgIHRhc2tzQ29udGFpbmVyLmFwcGVuZENoaWxkKGRpdilcbiAgICAgICAgfSk7IFxuICAgIH0gZWxzZSB7IFxuICAgICAgICBhcmNoaXZlZFRhc2tzLmZvckVhY2goZGl2ID0+IHtcbiAgICAgICAgICAgIHRhc2tzQ29udGFpbmVyLmFwcGVuZENoaWxkKGRpdik7XG4gICAgICAgICAgICB0YXNrc0NvbnRhaW5lci5yZW1vdmVDaGlsZChkaXYpO1xuICAgICAgICB9KVxuICAgIH07XG59O1xuXG5cbmZ1bmN0aW9uIGRlbGV0ZVRhc2sgKGV2ZW50KSB7XG4gICAgXG4gICAgY29uc3QgY2xpY2tlZENhcmQgPSBmaW5kQ2FyZEluQXJyYXkodGFza0NhcmRBcnJheXMpIHx8IGZpbmRDYXJkSW5BcnJheShhcmNoaXZlZFRhc2tzKTtcblxuICAgIGZ1bmN0aW9uIGZpbmRDYXJkSW5BcnJheShhcnJheSkge1xuICAgICAgcmV0dXJuIGFycmF5LmZpbmQoY2FyZCA9PiBjYXJkLnF1ZXJ5U2VsZWN0b3IoJy50YXNrUmVtb3ZlQnRuJykgPT09IGV2ZW50LnRhcmdldCk7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGNsaWNrZWRDYXJkSW5kZXggPSB0YXNrQ2FyZEFycmF5cy5pbmRleE9mKGNsaWNrZWRDYXJkKTtcbiAgICBjb25zdCBhcmNoaXZlZEluZGV4ID0gYXJjaGl2ZWRUYXNrcy5pbmRleE9mKGNsaWNrZWRDYXJkKTtcblxuXG4gICAgY29uc29sZS5sb2coY2xpY2tlZENhcmQsY2xpY2tlZENhcmRJbmRleCwgYXJjaGl2ZWRJbmRleClcblxuICAgIGlmIChjbGlja2VkQ2FyZEluZGV4ICE9PSAtMSkge1xuICAgICAgICB0YXNrQ2FyZEFycmF5cy5zcGxpY2UoY2xpY2tlZENhcmRJbmRleCwgMSk7XG4gICAgfTtcblxuICAgIGlmIChhcmNoaXZlZEluZGV4ICE9PSAtMSkge1xuICAgICAgICBhcmNoaXZlZFRhc2tzLnNwbGljZShhcmNoaXZlZEluZGV4LCAxKTtcbiAgICB9O1xuXG4gICAgZmlsdGVyVGFza3MoKTtcbn1cblxuZXhwb3J0IHt0YXNrRG9uZSwgYXJjaGl2ZSwgZGVsZXRlVGFza30iLCJpbXBvcnQge2FkZFRhc2ssIGFkZFByb2plY3R9IGZyb20gJy4vb2JqZWN0Q29udHJ1Y3Rvcic7XG5pbXBvcnQge2xpbmtQcm9qZWN0TmFtZSwgY29sb3JUYXNrfSBmcm9tIFwiLi9saW5rLVByb2plY3RUYXNrXCI7XG5pbXBvcnQgeyB0YXNrRG9uZSB9IGZyb20gJy4vZGx0LWFyY2h2JztcbmltcG9ydCBmaWx0ZXJUYXNrcyBmcm9tICcuL2ZpbHRlcic7XG5pbXBvcnQgeyBkZWxldGVUYXNrIH0gZnJvbSAnLi9kbHQtYXJjaHYnO1xuXG5jb25zdCB0YXNrQ2FyZEFycmF5cyA9IFtdO1xuLy8gYWRkaW5nIFRhc2sgY29udGVudFxuXG5mdW5jdGlvbiBsb2FkVGFzayh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByb2plY3RUaXRsZSkge1xuICAgIGxldCBhY2Nlc3NUYXNrID0gYWRkVGFzayh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByb2plY3RUaXRsZSk7XG5cbiAgICBjb25zdCB0YXNrQ2FyZCA9IGNyZWF0ZU5hbWVkRGl2KFwidGFza0NhcmRcIik7XG5cbiAgICB0YXNrQ2FyZC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBjb2xvclRhc2socHJvamVjdFRpdGxlKTtcblxuICAgIGNvbnN0IHRvcERldGFpbHNDYXJkID0gY3JlYXRlTmFtZWREaXYoJ3RvcERldGFpbHNDYXJkJyk7XG4gICAgICAgIHRvcERldGFpbHNDYXJkLmFwcGVuZENoaWxkKGNyZWF0ZUluZm9EaXYoJ3Byb2plY3ROYW1lJywgYWNjZXNzVGFzay5uZXdUYXNrT2JqLnByb2plY3RUaXRsZSkpO1xuXG4gICAgdGFza0NhcmQuYXBwZW5kQ2hpbGQodG9wRGV0YWlsc0NhcmQpO1xuXG4gICAgLy9jb25zdCBkYXlDb3VudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIC8vdG9wRGV0YWlsc0NhcmQuYXBwZW5uZENoaWxkKHByb2plY1RpdGxlLCBkYXlDb3VudClcblxuICAgIGNvbnN0IGJvdHRvbUNhcmQgPSBjcmVhdGVOYW1lZERpdihcImJvdHRvbUNhcmRcIik7XG4gICAgXG4gICAgICAgIGNvbnN0IGNlbnRlckluZm8gPSBjcmVhdGVOYW1lZERpdihcImNlbnRlckluZm9cIik7XG5cbiAgICAgICAgICAgIGNlbnRlckluZm8uYXBwZW5kQ2hpbGQoY3JlYXRlSW5mb0RpdihcInRhc2tUaXRsZVwiLCBhY2Nlc3NUYXNrLm5ld1Rhc2tPYmoudGl0bGUpKTtcbiAgICAgICAgICAgIC8vY2VudGVySW5mby5hcHBlbmRDaGlsZChjcmVhdGVJbmZvRGl2KFwidGFza0Rlc2NyaXB0aW9uXCIsIGFjY2Vzc1Rhc2submV3VGFza09iai5kZXNjcmlwdGlvbikpO1xuXG4gICAgICAgICAgICBjZW50ZXJJbmZvLmFwcGVuZENoaWxkKGNyZWF0ZUluZm9EaXYoXCJ0YXNrRHVlRGF0ZVwiLCBhY2Nlc3NUYXNrLm5ld1Rhc2tPYmouZHVlRGF0ZSkpO1xuXG4gICAgICAgIGNvbnN0IHJpZ2h0U2lkZSA9IGNyZWF0ZU5hbWVkRGl2KFwicmlnaHRTaWRlXCIpO1xuXG4gICAgICAgICAgICBjb25zdCB0YXNrQ2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgICAgICB0YXNrQ2hlY2tib3gudHlwZSA9IFwiY2hlY2tib3hcIjtcbiAgICAgICAgICAgIHRhc2tDaGVja2JveC5jbGFzc0xpc3QuYWRkKFwidGFza0NoZWNrYm94XCIpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICByaWdodFNpZGUuYXBwZW5kQ2hpbGQodGFza0NoZWNrYm94KSAgICBcbiAgICAgICAgICAgIHJpZ2h0U2lkZS5hcHBlbmRDaGlsZChjcmVhdGVJbmZvRGl2KFwidGFza1JlbW92ZUJ0blwiLCBcIvCfl5HvuI9cIiApKTtcblxuICAgIFxuICAgIC8vYXBwZW5kaW5nIGFsbCB0aGUgZGl2cyBjcmVhdGVkXG4gICAgYm90dG9tQ2FyZC5hcHBlbmQoY2VudGVySW5mbyk7XG4gICAgYm90dG9tQ2FyZC5hcHBlbmQocmlnaHRTaWRlKTtcbiAgICBcbiAgICB0YXNrQ2FyZC5hcHBlbmRDaGlsZChib3R0b21DYXJkKTtcblxuICAgIHRhc2tDYXJkQXJyYXlzLnB1c2godGFza0NhcmQpO1xuXG4gICAgXG5cbiAgICB0YXNrQ2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgICAgdGFza0RvbmUoZXZlbnQpXG4gICAgfSk7XG5cbiAgICBmaWx0ZXJUYXNrcygpO1xuICAgIFxufVxuXG4vLyBhZGRpbmcgcHJvamVjdCBjb250ZW50IFxuY29uc3QgcHJvamVjdHNDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2lkZWJhcicpO1xuXG5mdW5jdGlvbiBsb2FkUHJvamVjdCAodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBjb2xvcikge1xuICAgIGxldCBhY2Nlc3NQcm9qZWN0ID0gYWRkUHJvamVjdCh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIGNvbG9yKTtcblxuICAgIGNvbnN0IHByb2plY3RJdGVtID0gY3JlYXRlTmFtZWREaXYoXCJwcm9qZWN0SXRlbVwiKTtcblxuICAgICAgICBwcm9qZWN0SXRlbS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBjb2xvcjtcblxuICAgICAgICAvL2NoYW5nZSBjb2xvciB0byB3aGl0ZSBpZiBibGFjayBpcyBiYWNrZ3JvdW5kQ29sb3JcblxuICAgICAgICBwcm9qZWN0SXRlbS5hcHBlbmRDaGlsZChjcmVhdGVJbmZvRGl2KFwicHJvamVjdFRpdGxlXCIsIGFjY2Vzc1Byb2plY3QubmV3UHJvamVjdE9iai50aXRsZSkpO1xuXG4gICAgICAgIHByb2plY3RJdGVtLmFwcGVuZENoaWxkKGNyZWF0ZUluZm9EaXYoJ3Byb2plY3REdWVEYXRlJywgYWNjZXNzUHJvamVjdC5uZXdQcm9qZWN0T2JqLmR1ZURhdGUpKTtcblxuICAgICAgICBsaW5rUHJvamVjdE5hbWUodGl0bGUpO1xuICAgICAgICBcblxuICAgIHByb2plY3RzQ29udGFpbmVyLmFwcGVuZENoaWxkKHByb2plY3RJdGVtKTtcbn1cblxuXG5cbi8vIHF1aWNrIGNyZWF0ZUluZm9EaXYgXG5mdW5jdGlvbiBjcmVhdGVJbmZvRGl2IChjc3NDbGFzcywgdGV4dCkge1xuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRpdi5jbGFzc0xpc3QuYWRkKGNzc0NsYXNzKTtcbiAgICBkaXYudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgICAgICBpZiAoY3NzQ2xhc3MgPT09IFwidGFza1JlbW92ZUJ0blwiKXtcbiAgICAgICAgICAgIGRpdi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudCA9PiB7XG4gICAgICAgICAgICAgICAgZGVsZXRlVGFzayhldmVudCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9O1xuICAgIHJldHVybiBkaXZcbn1cblxuLy8gcXVpY2sgY3JlYXRlTmFtZWREaXZcbmZ1bmN0aW9uIGNyZWF0ZU5hbWVkRGl2IChuYW1lKSB7XG4gICAgY29uc3QgZGl2c09iamVjdHMgPSB7fTtcbiAgICBkaXZzT2JqZWN0c1tuYW1lXSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRpdnNPYmplY3RzW25hbWVdLmNsYXNzTGlzdC5hZGQobmFtZSk7XG4gICAgcmV0dXJuIGRpdnNPYmplY3RzW25hbWVdXG59XG5cblxuXG5leHBvcnQge2xvYWRUYXNrLCBsb2FkUHJvamVjdCwgdGFza0NhcmRBcnJheXN9XG4vLyIsIi8vaW1wb3J0IGFkZFRhc2sgZnJvbSAnLi9vYmplY3RDb250cnVjdG9yJ1xuaW1wb3J0IHtsb2FkVGFzayAsIGxvYWRQcm9qZWN0fSBmcm9tIFwiLi9sb2FkQ29uZW50XCI7XG5pbXBvcnQgeyBwcm9qZWN0QXJyYXkgfSBmcm9tIFwiLi9vYmplY3RDb250cnVjdG9yXCI7XG5pbXBvcnQgeyByZW1vdmVDb2xvck9wdCB9IGZyb20gXCIuL2xpbmstUHJvamVjdFRhc2tcIjtcbi8vIHJlZmVyZW5jZSB0byBkaWFsb2dzXG5jb25zdCB0YXNrRGlhbG9nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tEaWFsb2cnKTtcbmNvbnN0IHByb2plY3REaWFsb2cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvamVjdERpYWxvZycpO1xuXG5cbi8vIHN0b3JpbmcgVGFzayBmdW5jdGlvblxuZnVuY3Rpb24gc3RvcmVUYXNrICgpIHtcbiAgICBjb25zdCB0YXNrVGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFza1RpdGxlJyk7XG4gICAgY29uc3QgdGFza0Rlc2NyaXB0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tEZXNjcmlwdGlvbicpO1xuICAgIGNvbnN0IHRhc2tEdWVEYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tEdWVEYXRlJyk7XG5cbiAgICBjb25zdCBwcm9qZWN0TGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvamVjdExpc3RcIik7XG4gICAgY29uc3Qgc2VsZWN0ZWRQcm9qZWN0ID0gcHJvamVjdExpc3Qub3B0aW9uc1twcm9qZWN0TGlzdC5zZWxlY3RlZEluZGV4XTtcblxuICAgIHRhc2tUaXRsZS5mb2N1cygpO1xuXG4gICAgaWYgKCF0YXNrVGl0bGUuY2hlY2tWYWxpZGl0eSgpIHx8ICF0YXNrRGVzY3JpcHRpb24uY2hlY2tWYWxpZGl0eSgpIHx8ICF0YXNrRHVlRGF0ZS5jaGVja1ZhbGlkaXR5KCkgfHwgL15cXHMqJC8udGVzdCh0YXNrVGl0bGUudmFsdWUpIHx8IC9eXFxzKiQvLnRlc3QodGFza0Rlc2NyaXB0aW9uLnZhbHVlKSkge1xuICAgICAgICBhbGVydChcIlBsZWFzZSBmaWxsIHRoZSBpbnB1dHMuIFRoZSB0aXRsZSBjYW4ndCBleGNlZWQgMTAgY2hhcmFjaHRlcnMuIFRoZSBkZXNjcmlwdGlvbiBjYW4ndCBleGNlZWQgMzAgY2hhcmFjaHRlcnNcIik7XG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGxldCB0aXRsZSA9IHRhc2tUaXRsZS52YWx1ZTtcbiAgICBsZXQgZGVzY3JpcHRpb24gPSB0YXNrRGVzY3JpcHRpb24udmFsdWU7XG4gICAgbGV0IGR1ZURhdGUgPSB0YXNrRHVlRGF0ZS52YWx1ZTtcbiAgICBsZXQgcHJvamVjdFRpdGxlID0gc2VsZWN0ZWRQcm9qZWN0LnZhbHVlXG4gICAgXG4gICBcblxuICAgIHRhc2tEaWFsb2cuY2xvc2UoKTtcbiAgICBsb2FkVGFzayh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByb2plY3RUaXRsZSk7XG5cbiAgICB0YXNrVGl0bGUudmFsdWUgPSAnJztcbiAgICB0YXNrRGVzY3JpcHRpb24udmFsdWUgPSAnJztcbiAgICB0YXNrRHVlRGF0ZS52YWx1ZSA9ICcnO1xufVxuXG4vLyBzdG9yaW5nIHByb2plY3QgZnVuY3Rpb25cbmZ1bmN0aW9uIHN0b3JlUHJvamVjdCAoKSB7XG4gICAgY29uc3QgcHJvamVjdFRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2plY3RUaXRsZScpO1xuICAgIGNvbnN0IHByb2plY3REZXNjcmlwdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0RGVzY3JpcHRpb24nKTtcbiAgICBjb25zdCBwcm9qZWN0RHVlRGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0RHVlRGF0ZScpO1xuICAgIGNvbnN0IHByb2plY3RDb2xvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0Q29sb3InKTtcblxuICAgIGlmICghcHJvamVjdFRpdGxlLmNoZWNrVmFsaWRpdHkoKSB8fCAhcHJvamVjdERlc2NyaXB0aW9uLmNoZWNrVmFsaWRpdHkoKSB8fCAhcHJvamVjdER1ZURhdGUuY2hlY2tWYWxpZGl0eSgpIHx8IC9eXFxzKiQvLnRlc3QocHJvamVjdFRpdGxlLnZhbHVlKSB8fCAvXlxccyokLy50ZXN0KHByb2plY3REZXNjcmlwdGlvbi52YWx1ZSkpIHtcbiAgICAgICAgYWxlcnQoXCJQbGVhc2UgZmlsbCB0aGUgaW5wdXRzLiBUaGUgdGl0bGUgY2FuJ3QgZXhjZWVkIDEwIGNoYXJhY2h0ZXJzLiBUaGUgZGVzY3JpcHRpb24gY2FuJ3QgZXhjZWVkIDMwIGNoYXJhY2h0ZXJzXCIpO1xuICAgICAgICByZXR1cm5cbiAgICB9XG5cblxuICAgIGxldCB0aXRsZSA9IHByb2plY3RUaXRsZS52YWx1ZTtcbiAgICBsZXQgZGVzY3JpcHRpb24gPSBwcm9qZWN0RGVzY3JpcHRpb24udmFsdWU7XG4gICAgbGV0IGR1ZURhdGUgPSBwcm9qZWN0RHVlRGF0ZS52YWx1ZTtcbiAgICBsZXQgY29sb3IgPSBwcm9qZWN0Q29sb3IudmFsdWU7XG4gICAgXG4gICAgXG4gICAgXG4gICAgY29uc3QgZG91YmxlTmFtZUNoZWNrID0gcHJvamVjdEFycmF5LmZpbmQob2JqID0+IG9iai50aXRsZSA9PT0gdGl0bGUpO1xuXG4gICAgaWYgKGRvdWJsZU5hbWVDaGVjaykge1xuICAgICAgICBhbGVydChcImNhbid0IHVzZSBzYW1lIHByb2plY3QgbmFtZVwiKTtcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuICAgIFxuICAgIGlmIChyZW1vdmVDb2xvck9wdChjb2xvcikpIHtcbiAgICAgICAgYWxlcnQoXCJNYXggYW1vdW50IG9mIHByb2plY3RzIHJlYWNoZWRcIilcbiAgICAgICAgcmV0dXJuXG4gICAgfTtcblxuICAgIHByb2plY3REaWFsb2cuY2xvc2UoKTtcblxuICAgIGxvYWRQcm9qZWN0KHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgY29sb3IpO1xuXG4gICAgcHJvamVjdFRpdGxlLnZhbHVlID0gJyc7XG4gICAgcHJvamVjdERlc2NyaXB0aW9uLnZhbHVlID0gJyc7XG4gICAgcHJvamVjdER1ZURhdGUudmFsdWUgPSAnJztcbn1cblxuZXhwb3J0IHtzdG9yZVRhc2ssIHN0b3JlUHJvamVjdH0iLCJpbXBvcnQgJy4uL2Rpc3Qvc3R5bGUuY3NzJ1xuaW1wb3J0ICB7c3RvcmVUYXNrLCBzdG9yZVByb2plY3QgfSBmcm9tICcuL3N0b3JlTW9kYWxzJ1xuaW1wb3J0IGZpbHRlclRhc2tzIGZyb20gJy4vZmlsdGVyJztcbmltcG9ydCB7YXJjaGl2ZX0gZnJvbSAnLi9kbHQtYXJjaHYnO1xuXG5cbi8vZm9jdXMgZGl2c1xuY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tUaXRsZScpO1xuY29uc3QgcHJvamVjdFRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2plY3RUaXRsZScpO1xuXG5cbi8vIHRhc2tidG5cbmNvbnN0IHRhc2tCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFza0J0bicpO1xuY29uc3QgdGFza0RpYWxvZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrRGlhbG9nJyk7XG50YXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIHRhc2tEaWFsb2cuc2hvd01vZGFsKCk7XG4gICAgdGFza1RpdGxlLmZvY3VzKClcbn0pO1xuXG5cbi8vIHByb2plY3RCdG5cbmNvbnN0IHByb2plY3RCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvamVjdEJ0bicpO1xuY29uc3QgcHJvamVjdERpYWxvZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0RGlhbG9nJyk7XG5wcm9qZWN0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIHByb2plY3REaWFsb2cuc2hvd01vZGFsKCk7XG4gICAgcHJvamVjdFRpdGxlLmZvY3VzKCk7XG59KTtcblxuXG5cbi8vIGNvbmZpcm0gZnVuY3Rpb25zXG5jb25zdCB0YXNrQ29uZmlybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrQ29uZmlybScpO1xudGFza0NvbmZpcm0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldmVudCA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBzdG9yZVRhc2soKTtcbn0pO1xuXG5jb25zdCBwcm9qZWN0Q29uZmlybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0Q29uZmlybScpO1xucHJvamVjdENvbmZpcm0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldmVudCA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBzdG9yZVByb2plY3QoKTtcbn0pO1xuXG5cbi8vIGNsb3NlQnRuXG5jb25zdCBjbG9zZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jbG9zZS1idG4nKTtcbmNsb3NlQnRuLmZvckVhY2goKGJ0bikgPT4ge1xuICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV2ZW50ID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRhc2tEaWFsb2cuY2xvc2UoKTtcbiAgICBwcm9qZWN0RGlhbG9nLmNsb3NlKCk7XG4gICAgfSk7XG59KTtcblxuXG4vLyBmaWx0ZXIgbGlzdGVuZXIgXG5jb25zdCBmaWx0ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZpbHRlclwiKTtcbmZpbHRlci5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7XG4gICAgZmlsdGVyVGFza3MoKVxufSk7XG5cbmNvbnN0IGNoZWNrYm94QXJjaGl2ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hlY2tib3hBcmNoaXZlXCIpO1xuY2hlY2tib3hBcmNoaXZlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGFyY2hpdmUoKTtcbn0pO1xuXG4vL2RlbGV0ZSBsaXN0ZW5lciBcblxuXG5cblxuLy9wcm9qZWN0Q29uZmlybS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycscHJvamVjdFN0b3JlT2JqZWN0KCkpXG5cblxuXG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwibG9jYWxzIiwicHJvamVjdEFycmF5IiwidGFza0FycmF5IiwiVGFzayIsImNvbnN0cnVjdG9yIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImR1ZURhdGUiLCJwcm9qZWN0VGl0bGUiLCJQcm9qZWN0IiwiY29sb3IiLCJzdXBlciIsInByb2plY3RMaXN0IiwiZ2V0RWxlbWVudEJ5SWQiLCJwcm9qZWN0Q29sb3IiLCJlbGVtZW50Q291bnQiLCJjb2xvclRhc2siLCJtYXRjaGluZ09iaiIsImZpbmQiLCJyZW1vdmVDb2xvck9wdCIsImNob3Nlbk9wdGlvbiIsIkFycmF5IiwiZnJvbSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwib3B0aW9uIiwidmFsdWUiLCJjb250YWlucyIsImNvbnNvbGUiLCJsb2ciLCJjaGlsZEVsZW1lbnRDb3VudCIsInRhc2tzQ29udGFpbmVyIiwiZmlsdGVyIiwiYXBwZW5kQ2hpbGRzIiwibmFtZWRBcnJheSIsImZvckVhY2giLCJkaXYiLCJxdWVyeVNlbGVjdG9yQWxsIiwidGFza0NhcmRBcnJheXMiLCJzbGljZSIsInJldmVyc2UiLCJjb21wYXJlQnlEYXRlIiwiYiIsIkRhdGUiLCJ0ZXh0Q29udGVudCIsInNvcnQiLCJjb21wYXJlQnlQcm9qZWN0Iiwic3RyaW5nQSIsInN0cmluZ0IiLCJsb2NhbGVDb21wYXJlIiwiYXJjaGl2ZSIsImNoZWNrYm94QXJjaGl2ZSIsImFyY2hpdmVkVGFza3MiLCJjaGVja2VkIiwicHJvamVjdHNDb250YWluZXIiLCJjcmVhdGVJbmZvRGl2IiwiY3NzQ2xhc3MiLCJ0ZXh0IiwiY2xhc3NMaXN0IiwiYWRkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiY2xpY2tlZENhcmQiLCJmaW5kQ2FyZEluQXJyYXkiLCJhcnJheSIsImNhcmQiLCJjbGlja2VkQ2FyZEluZGV4IiwiaW5kZXhPZiIsImFyY2hpdmVkSW5kZXgiLCJkZWxldGVUYXNrIiwiY3JlYXRlTmFtZWREaXYiLCJuYW1lIiwiZGl2c09iamVjdHMiLCJ0YXNrRGlhbG9nIiwicHJvamVjdERpYWxvZyIsInRhc2tUaXRsZSIsInRhc2tCdG4iLCJzaG93TW9kYWwiLCJmb2N1cyIsInByb2plY3RCdG4iLCJwcmV2ZW50RGVmYXVsdCIsInRhc2tEZXNjcmlwdGlvbiIsInRhc2tEdWVEYXRlIiwic2VsZWN0ZWRQcm9qZWN0Iiwic2VsZWN0ZWRJbmRleCIsImNoZWNrVmFsaWRpdHkiLCJ0ZXN0IiwiYWxlcnQiLCJjbG9zZSIsImFjY2Vzc1Rhc2siLCJwcm9qZWN0TmFtZSIsIm5ld1Rhc2tPYmoiLCJhZGRUYXNrIiwidGFza0NhcmQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0b3BEZXRhaWxzQ2FyZCIsImJvdHRvbUNhcmQiLCJjZW50ZXJJbmZvIiwicmlnaHRTaWRlIiwidGFza0NoZWNrYm94IiwidHlwZSIsImFwcGVuZCIsImNsaWNrZWRDYXJkUHJvamVjdFRpdGxlIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImluY2x1ZGVzIiwidGFza0RvbmUiLCJsb2FkVGFzayIsInN0b3JlVGFzayIsInByb2plY3REZXNjcmlwdGlvbiIsInByb2plY3REdWVEYXRlIiwiYWNjZXNzUHJvamVjdCIsIm5ld1Byb2plY3RPYmoiLCJhZGRQcm9qZWN0IiwicHJvamVjdEl0ZW0iLCJwcm9qZWN0T3B0aW9uIiwibGlua1Byb2plY3ROYW1lIiwibG9hZFByb2plY3QiLCJzdG9yZVByb2plY3QiLCJidG4iXSwic291cmNlUm9vdCI6IiJ9