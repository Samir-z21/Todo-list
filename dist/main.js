(()=>{"use strict";var e={341:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),o=t.n(r),a=t(645),c=t.n(a)()(o());c.push([e.id,"/* :root {\n    --\n}\n*/ \n\n* {\n    padding: 0;\n    margin: 0;\n    \n}\nbody {\n    background-color: grey;\n    padding: 0;\n    margin: 0;\n    display: grid;\n    grid-template: 20vh 70vh 10vh / 10vw 90vw;\n}\n\n/*Header*/\n#header {\n    grid-column: 2/3;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: 1px solid red;\n    padding-top: 50px;\n}\n\n#buttons {\n    align-self: flex-end;\n    padding-right: 30px;\n}\n\nbutton {\n    width: 200px;\n    height: 50px;\n    cursor: pointer;\n}\n\n/*Sidebar*/ \n#sidebar {\n    border: 1px solid blue;\n    grid-row: 1/3;\n}\n\n/*Tasks container */\n#tasks-container {\n    border: 1px solid green;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n    margin: 30px;\n}\n\n/*task card*/\n.taskCard {\n    display: flex;\n    flex-direction: column;\n    background-color: blue;\n    padding: 20px;\n}\n\n.bottomCard {\n    display: flex;\n}\n\n.centerInfo {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.taskCheckMark {\n    width: 20px;\n    height: 20px;\n    background-color: #eee;\n    border: 1px solid #ccc;\n    cursor: pointer;\n}\n/*Footer*/\n#footer {\n    grid-column: 1/3;\n    border: 1px solid purple;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}","",{version:3,sources:["webpack://./dist/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;IACI,UAAU;IACV,SAAS;;AAEb;AACA;IACI,sBAAsB;IACtB,UAAU;IACV,SAAS;IACT,aAAa;IACb,yCAAyC;AAC7C;;AAEA,SAAS;AACT;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,qBAAqB;IACrB,iBAAiB;AACrB;;AAEA;IACI,oBAAoB;IACpB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA,UAAU;AACV;IACI,sBAAsB;IACtB,aAAa;AACjB;;AAEA,mBAAmB;AACnB;IACI,uBAAuB;IACvB,aAAa;IACb,eAAe;IACf,SAAS;IACT,YAAY;AAChB;;AAEA,YAAY;AACZ;IACI,aAAa;IACb,sBAAsB;IACtB,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,sBAAsB;IACtB,eAAe;AACnB;AACA,SAAS;AACT;IACI,gBAAgB;IAChB,wBAAwB;IACxB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB",sourcesContent:["/* :root {\n    --\n}\n*/ \n\n* {\n    padding: 0;\n    margin: 0;\n    \n}\nbody {\n    background-color: grey;\n    padding: 0;\n    margin: 0;\n    display: grid;\n    grid-template: 20vh 70vh 10vh / 10vw 90vw;\n}\n\n/*Header*/\n#header {\n    grid-column: 2/3;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: 1px solid red;\n    padding-top: 50px;\n}\n\n#buttons {\n    align-self: flex-end;\n    padding-right: 30px;\n}\n\nbutton {\n    width: 200px;\n    height: 50px;\n    cursor: pointer;\n}\n\n/*Sidebar*/ \n#sidebar {\n    border: 1px solid blue;\n    grid-row: 1/3;\n}\n\n/*Tasks container */\n#tasks-container {\n    border: 1px solid green;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n    margin: 30px;\n}\n\n/*task card*/\n.taskCard {\n    display: flex;\n    flex-direction: column;\n    background-color: blue;\n    padding: 20px;\n}\n\n.bottomCard {\n    display: flex;\n}\n\n.centerInfo {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.taskCheckMark {\n    width: 20px;\n    height: 20px;\n    background-color: #eee;\n    border: 1px solid #ccc;\n    cursor: pointer;\n}\n/*Footer*/\n#footer {\n    grid-column: 1/3;\n    border: 1px solid purple;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}"],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],d=r.base?s[0]+r.base:s[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var A=t(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(p);else{var m=o(p,r);r.byIndex=i,n.splice(i,0,{identifier:u,updater:m,references:1})}c.push(u)}return c}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=t(a[c]);n[i].references--}for(var s=r(e,o),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),c=t.n(a),i=t(565),s=t.n(i),d=t(216),l=t.n(d),u=t(589),A=t.n(u),p=t(341),m={};m.styleTagTransform=A(),m.setAttributes=s(),m.insert=c().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=[],C=[];class h{constructor(e,n,t,r){this.title=e,this.description=n,this.dueDate=t,this.projectTitle=r}}class g extends h{constructor(e,n,t,r){super(e,n,t),this.color=r}}const v=document.getElementById("projectList"),B=document.getElementById("projectColor");let y=1;function I(e){const n=Array.from(B.getElementsByTagName("option")).find((n=>n.value===e));if(!B.contains(n))return console.log("hey"),!0;v.childElementCount===y&&(y++,B.removeChild(n))}const x=document.getElementById("tasks-container"),b=document.getElementById("filter");function k(e){e.forEach((e=>{x.appendChild(e)}))}const E=function(){switch(Array.from(x.getElementsByClassName("taskCard")).forEach((e=>{x.removeChild(e)})),b.value){case"oldest":k(j);break;case"newest":k(j.slice().reverse());break;case"dueDate":function e(e,n){return new Date(e.querySelector(".taskDueDate").textContent)-new Date(n.querySelector(".taskDueDate").textContent)}k(j.slice().sort(e));break;case"project":function n(e,n){const t=e.querySelector(".projectName").textContent,r=n.querySelector(".projectName").textContent;return t.localeCompare(r)}k(j.slice().sort(n))}},j=[];document.getElementById("tasks-container");const w=document.getElementById("sidebar");function T(e,n){const t=document.createElement("div");return t.classList.add(e),t.textContent=n,t}function D(e){const n={};return n[e]=document.createElement("div"),n[e].classList.add(e),n[e]}const S=document.getElementById("taskDialog"),M=document.getElementById("projectDialog"),L=document.getElementById("taskTitle"),O=document.getElementById("projectTitle"),N=document.getElementById("taskBtn"),U=document.getElementById("taskDialog");N.addEventListener("click",(()=>{U.showModal(),L.focus()}));const Y=document.getElementById("projectBtn"),P=document.getElementById("projectDialog");Y.addEventListener("click",(()=>{P.showModal(),O.focus()})),document.getElementById("taskConfirm").addEventListener("click",(e=>{e.preventDefault(),function(){const e=document.getElementById("taskTitle"),n=document.getElementById("taskDescription"),t=document.getElementById("taskDueDate"),r=document.getElementById("projectList"),o=r.options[r.selectedIndex];if(e.focus(),!e.checkValidity()||!n.checkValidity()||!t.checkValidity()||/^\s*$/.test(e.value)||/^\s*$/.test(n.value))return void alert("Please fill the inputs. The title can't exceed 10 charachters. The description can't exceed 30 charachters");let a=e.value,c=n.value,i=t.value,s=o.value;S.close(),function(e,n,t,r){let o=function(e,n,t,r){const o=new h(e,n,t,r);return C.push(o),{newTaskObj:o,taskArray:C}}(e,n,t,r);const a=D("taskCard");a.style.backgroundColor=function(e){const n=f.find((n=>n.title===e));return n?n.color:void 0}(r);const c=D("topDetailsCard");c.appendChild(T("projectName",o.newTaskObj.projectTitle)),a.appendChild(c);const i=D("bottomCard"),s=D("centerInfo");s.appendChild(T("taskTitle",o.newTaskObj.title)),s.appendChild(T("taskDueDate",o.newTaskObj.dueDate));const d=D("rightSide");d.appendChild(T("taskCheckMark")),d.appendChild(T("taskRemoveBtn","🗑️")),i.append(s),i.append(d),a.appendChild(i),j.push(a),E()}(a,c,i,s),e.value="",n.value="",t.value=""}()})),document.getElementById("projectConfirm").addEventListener("click",(e=>{e.preventDefault(),function(){const e=document.getElementById("projectTitle"),n=document.getElementById("projectDescription"),t=document.getElementById("projectDueDate"),r=document.getElementById("projectColor");if(!e.checkValidity()||!n.checkValidity()||!t.checkValidity()||/^\s*$/.test(e.value)||/^\s*$/.test(n.value))return void alert("Please fill the inputs. The title can't exceed 10 charachters. The description can't exceed 30 charachters");let o=e.value,a=n.value,c=t.value,i=r.value;f.find((e=>e.title===o))?alert("can't use same project name"):I(i)?alert("Max amount of projects reached"):(M.close(),function(e,n,t,r){let o=function(e,n,t,r){const o=new g(e,n,t,r);return f.push(o),{newProjectObj:o,projectArray:f}}(e,n,t,r);const a=D("projectItem");a.style.backgroundColor=r,a.appendChild(T("projectTitle",o.newProjectObj.title)),a.appendChild(T("projectDueDate",o.newProjectObj.dueDate)),function(e){const n=document.createElement("option");n.value=e,n.text=e,v.appendChild(n)}(e),w.appendChild(a)}(o,a,c,i),e.value="",n.value="",t.value="")}()})),document.querySelectorAll(".close-btn").forEach((e=>{e.addEventListener("click",(e=>{e.preventDefault(),U.close(),P.close()}))})),document.getElementById("filter").addEventListener("change",(()=>{E()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,